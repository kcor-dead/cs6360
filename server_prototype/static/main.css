/** Copyright 2016 David Li, Michael Mauer, Andy Jiang

This file is part of Tell Me to Survive.

Tell Me to Survive is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Tell Me to Survive is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with Tell Me to Survive.  If not, see <http://www.gnu.org/licenses/>.
*/

body {
    margin: 0;
    padding: 0;

    font-size: 1em;
    font-family: source-code-pro, monospace;

    background: #000;
}

#container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: 0;
    padding: 0;
    min-height: 600px;
}

#main {
    background: none;
    position: absolute;
    top: 0;
    left: 2em;
    right: 2em;
    bottom: 1em;
}

.container {
    margin: 0;
    width: 100%;
    min-width: 960px;
    height: 100%;
    border: 1px solid #000;
    color: #FFF;
    box-shadow: 0px 1px 10px rgba(255, 255, 255, 0.8);
}

#hierarchyContainer {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0,0,0,0.8);
    z-index: 10000;
    animation: fade-in 0.3s ease-in-out;
}

#hierarchy {
    background: #000;
    color: #FFF;
    box-shadow: 0px 1px 10px rgba(255, 255, 255, 0.8);
    position: fixed;
    left: 3em;
    right: 3em;
    margin: 1em auto;
    max-width: 1000px;
    animation: scroll-up 0.3s ease-in-out;
    z-index: 99999;
}

#hierarchy .image {
    float: left;
    width: 500px;
    height: 500px;
    background: #FFF;
    border: 1px solid #000;
}

#hierarchy header {
    font-size: 1.75em;
    font-weight: 300;
    height: 3rem;
    line-height: 3rem;
    margin-left: 525px;
}

#hierarchy h2 {
    font-weight: 400;
}

#hierarchy .methods {
    margin-left: 525px;
}

#hierarchy header button {
    float: right;
    font-size: 1.25rem;
    line-height: 1em;

    margin: 0;
    padding: 0.25em 1em;
    height: 3rem;
    background: none;
}

.node {
    fill: #FFF;
}

.node text {
    font: 1em source-code-pro, monospace;
    cursor: pointer;
}

.node circle {
    fill: #FFF;
}

.node {
    cursor: pointer;
}

.node:hover circle {
    fill: #0D0;
}

.link {
    fill: none;
    stroke: #ccc;
    stroke-width: 2px;
}

#tooltip {
    /* position: absolute stops you from being able to click on stuff */
    margin: 0 1em;
    min-width: 960px;
    color: #FFF;
}

.tooltip {
    position: absolute;
    z-index: 9999;
    width: 9em;
    box-shadow: 0px 1px 10px rgba(255, 255, 255, 0.8);
    padding: 0.5em;
    background: rgba(0,75,200,0.8);
}

.tooltip button {
    position: absolute;
    top: 0;
    right: 0;
    width: 1em;
    height: 1em;
    font-size: 1.5em;
    line-height: 1em;

    border: 0;
    margin: 0;
    padding: 0;
    color: #999;
    background: none;

    transition: 0.3s color ease-in-out;
}

.tooltip button:hover {
    color: #FFF;
}

.tooltip.map {
    top: 3em;
}

.tooltip.objectives {
    top: 50%;
}

.tooltip.controls {
    bottom: 1em;
}

.tooltip.toolbox {
    left: calc(320px + 6em);
    top: 50%;
    box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.8);
}

.tooltip.workspace {
    right: 4em;
    top: 50%;
    box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.8);
}

.tooltip.buttonbar {
    right: 2em;
    top: 1em;
    box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.8);
}

#editor {
    float: left;
    width: calc(100% - 320px);
    height: 100%;
    position: relative;
}

#editor header {
    height: 3rem;
}

#editor header .title {
    float: left;
    height: 3rem;
    line-height: 3rem;
    font-size: 1.25rem;
    margin-left: 0.5rem;
}

#editor header .title.blink {
    animation: blink 1s ease-in-out;
}

#editor header .title span {
}

#editor header .title img {
    height: 2rem;
    vertical-align: middle;
    margin-right: 0.5rem;
}

#memoryBar {
    height: 3rem;
    line-height: 3rem;
    margin: 0 0 0 1rem;
    padding: 0 1rem;
    float: left;
    box-sizing: border-box;
    border-left: 1px solid #FFF;
    border-right: 1px solid #FFF;
}

#editor header code {
    font-family: source-code-pro, monospace;
}

#editor header button.ui {
    font-size: 1rem;
    float: left;
    height: 3rem;
    font-weight: 400;

    line-height: 1.25rem;
    width: 7rem;
}

#editor header button[disabled] {
    opacity: 0.5;
}

#workspace {
    height: calc(100% - 3em);
}

#codeWorkspace {
    position: absolute;
    top: 3rem;
    left: 0;
    right: 0;
    bottom: 0;
    display: none;
}

#editor.blockly #workspace {
    /* We don't want to set the workspace to display: none as that breaks
       Blockly's rendering. Instead, we just make sure the
       codeWorkspace is on top of everything else. */
    /* display: block; */
    z-index: 0;
}

#editor.ace #codeWorkspace {
    display: block;
    z-index: 1000;
}

.blueprint {
    display: inline-block;
    width: 100%;

    /* Override Blockly styles */
    border-left: 0 !important;
    padding-right: 0 !important;

    color: #FFF;
    background: #007;
    /* Based on http://lea.verou.me/css3patterns/#blueprint-grid */
    /* My understanding: background-size sets the size of the pattern, one
       pair per linear-gradient line. This causes the pattern to tile. */
    background-size: 10px 10px, 10px 10px;
    /* Here we specify a color and a stop. The stop is the position along
       the gradient where the color should stop. */
    background-image:
    linear-gradient(rgba(255, 255, 255, 0.2) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255, 255, 255, 0.2) 1px, transparent 1px);
}

.blueprint .blocklyTreeIcon {
    display: none !important;
}

.blueprint.blocklyTreeRow:hover:not(.blocklyTreeSelected) {
    background-color: #00A;
}

#sidebar {
    float: left;
    width: 320px;
    height: 100%;
}

#worldMap {
    height: 320px;
    width: 100%;
    float: left;
    cursor: move;
}

#objectives {
    background: #000;
    height: calc(100% - 320px - 120px);
    width: 100%;
    float: left;
}

#objectives h2 {
    padding-left: 1.5rem;
    margin: 0.25em 0;
    font-weight: normal;
}

#objectives ul {
    margin: 0;
    padding-left: 0.5em;
    list-style-type: none;
}

.checkbox {
    display: inline-block;
    width: 0.75em;
    height: 0.75em;
    margin-right: 0.5em;
    border: 1px solid #FFF;
    content: " ";
    transition: 0.3s background-color ease-in-out;
}

.checkbox.checked {
    background: green;
    animation: blink 0.5s ease-in-out;
}

#objectives li .checkbox {
    float: left;
    margin-top: 0.25em;
}

#objectives li .description {
    display: inline-block;
    width: calc(100% - 1.5em);
}

#objectives li.completed .description {
    animation: completed 1.25s ease-in-out;
}

li.objective img {
    height: 1em;
}

#gameControls {
    height: 50px;
    width: 100%;
    float: left;
}

#gameControls button {
    border: 0;
    width: 100%;
    height: 100%;
    color: #FFF;
    font-size: 2rem;
    cursor: pointer;
    font-family: source-code-pro, monospace;
}

.executing #gameControls {
    height: 50px;
}

.executing #gameControls button {
    width: 33.333%;
}

#gameControls button[disabled] {
    background: gray !important;
}

#gameControls button.run {
    background: rgb(0, 128, 0);
    animation: glow 2s ease-in-out infinite alternate;
}

#gameControls button.run:hover {
    background: green;
    box-shadow: 0px 0px 20px rgba(255, 255, 255, 0.8);
    animation: none;
}

#gameControls button.runInvalid {
    background: #FF1493;
}

#gameControls button.runMemory {
    background: orange;
    font-size: 1.5rem;
}

#gameControls button.abort {
    background: red;
}

#gameControls button.reset {
    background: red;
    width: 100%;
}

#gameControls button.pause {
    background: purple;
}

#gameControls button.step {
    background: orange;
}

#editor.executing {
    width: calc(100% - 480px);
}

#sidebar.executing {
    width: 480px;
}

.executing #worldMap {
    height: 380px;
}

.executing #objectives {
    height: calc(100% - 380px - 60px);
}

#congratulationsContainer {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0,0,0,0.8);
    z-index: 10000;
    animation: fade-in 0.3s ease-in-out;
}

@keyframes slide-right {
    0% {
        left: 0;
    }

    100% {
        left: calc(2em + 320px);
    }
}

#congratulationsContainer.nextLevel {
    left: calc(2em + 320px);
    animation: slide-right 1s ease-in-out;
}

#congratulationsContainer.nextLevel #congratulations {
    animation: none;
}

#congratulations {
    font-size: 1.5em;
    margin: 5em auto 0;
    width: 600px;
    background: #000;
    color: #FFF;
    padding: 1em;
    box-shadow: 0px 1px 20px rgba(255, 255, 255, 0.8);
    animation: scroll-up 1s ease-in-out;
}

#congratulations h2 {
    font-size: 2.25em;
    letter-spacing: 0.1em;
    font-weight: 200;
    text-transform: uppercase;
    margin: 0 auto;
    text-align: center;
}

#congratulations ul {
    list-style-type: none;
    padding: 0;
}

#congratulations p {
    margin-top: 0;
}

#congratulations section {
    max-height: 250px;
    overflow-y: auto;
}

.readonly {
    background: black;
    opacity: 0.8;
    position: absolute;
    z-index: 9999;
}

#victory {
    color: #FFF;
    text-shadow: 0px 0px 5px rgba(0, 0, 0, 0.8);
    font-size: 1.5em;
}

#victory .victory-background {
    background: url(assets/earth_blurred.jpg);
    background-size: cover;

    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;

    animation: 30s scroll-up-victory ease-out;
}

#victory .victory-container {
    width: 52rem;
    margin: 10rem auto;
    height: auto;
}

#victory h1, #victory h2 {
    letter-spacing: 0.1em;
    font-weight: 200;
    text-transform: uppercase;
    margin: 0 auto;
    text-align: center;
}

#victory h1 {
    font-size: 3em;
}

#victory h2 {
    font-size: 1.25em;
}

#victory ul.view-code {
    font-size: 1rem;
    list-style-type: none;
}

#victory ul.view-code li {
    font-size: 1rem;
    cursor: pointer;
    text-decoration: underline;
}

#victory pre.view-code {
    padding: 0;
    font-size: 1rem;
    font-family: source-code-pro, monospace;
    overflow: auto;
}

/** UI Widgets **/

button.ui {
    border: 1px solid #FFF;
    background: none;
    padding: 0.25em 0.5em;
    margin: 0;
    font-family: inherit;
    text-transform: uppercase;
    color: #FFF;
    font-size: 1em;
    transition: box-shadow 0.3s ease-in-out;
}

button.ui[disabled] {
    color: #999;
    border-color: #999;
}

button.ui:not([disabled]):hover {
    box-shadow: 0px 0px 20px rgba(255, 255, 255, 0.8);
    text-shadow: 0px 0px 5px rgba(255, 255, 255, 0.8);
    cursor: pointer;
}

button.ui:not([disabled]):active {
    transform: translateY(1px);
    text-shadow: none;
}

@keyframes fade-in {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

@keyframes blink {
    0% {
        opacity: 1;
    }

    25% {
        opacity: 0;
    }

    50% {
        opacity: 1;
    }

    75% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}


@keyframes loading {
    0% {
        opacity: 0.5;
    }

    100% {
        opacity: 1;
    }
}

@keyframes scroll-up {
    0% {
        opacity: 0;
        transform: translateY(300%);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes scroll-up-victory {
    0% {
        opacity: 0;
        transform: translateY(100%);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes completed {
    0% {
        background: #000;
    }

    30% {
        background: green;
    }

    70% {
        background: green;
    }

    100% {
        background: #000;
    }
}

@keyframes glow {
    0% {
        box-shadow: 0px 0px 2px rgba(255, 255, 255, 0.8);
        background: rgba(0, 128, 0, 0.4);
    }

    100% {
        box-shadow: 0px 0px 20px rgba(255, 255, 255, 0.8);
        background: rgba(0, 128, 0, 1);
    }
}

.ui.loading {
    animation: loading 2s ease-in-out infinite alternate;
}

.right {
    float: right;
}

.clearfix {
    clear: both;
}