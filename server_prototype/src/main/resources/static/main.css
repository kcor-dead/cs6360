body {
    margin: 0;
    padding: 0;

    font-size: 1em;
    font-family: "Noto Sans UI", sans-serif;
}

.container {
    margin: 0 auto;
    width: 1280px;
    height: 720px;
    border: 1px solid #000;
}

#editor {
    float: left;
    width: 80%;
    height: 100%;
}

#workspace {
    float: left;
    width: calc(60% - 1px);
    height: 100%;
    border-right: 1px solid #000;
}

#block-editor {
    height: 80%;
}

#workspace .block-trash {
    height: 20%;
    border: 1px solid red;
}

#workspace .block {
    width: -moz-max-content;
    width: max-content;
}

.block {
    display: block;
    border-radius: 5px;
    margin: 0.5em;
    box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.5);
    cursor: grab;
    transition: 0.3s ease-in-out box-shadow;
    color: #FFF;
    height: 2em;
    line-height: 2em;
    transition: 0.3s ease-in-out box-shadow;
}

.block:hover {
    box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.5);
}

.block-hole .block, .block-hole {
    box-sizing: border-box;
    display: inline-block;
    height: 2rem;
    vertical-align: top;
    border-radius: 5px;
    line-height: 2em;
    box-shadow: none;
    margin: 0;
    padding: 0 0.5em;
}

.block-hole {
    width: 3em;
    border: 2px dashed;
    background: #FFF !important;
}

.block-hole.filled {
    width: auto;
    border: 0;
    background: none;
    padding: 0;
}

.block-hole .workspace-block {
    width: auto;
}

.block-hole.method {
    border-color: #C0C;
}

.block-hole.primitive {
    border-color: brown;
}

.block-hole.object {
    border-color: #0F0;
}

#workbench {
    float: left;
    width: 40%;
    height: 100%;
}

.workbench-area {
    display: block;
    padding: 0.5em;
    color: #FFF;
    overflow-y: auto;
}

.workbench-area:nth-child(1) {
    height: calc(40% - 1em);
}

.workbench-area:nth-child(2) {
    height: calc(20% - 1em);
}

.workbench-area:nth-child(3) {
    height: calc(40% - 1em);
}

.block-container > .block {
    display: inline-block;
    width: calc(50% - 1em);
    margin: 0.5em;
}

.block-container .block.wide {
    width: -moz-max-content;
    width: -webkit-max-content;
    width: max-content;
}

.blueprint {
    background: #00C;
    border: 1px solid #00F;
    /* Based on http://lea.verou.me/css3patterns/#blueprint-grid */
    /* My understanding: background-size sets the size of the pattern, one
       pair per linear-gradient line. This causes the pattern to tile. */
    background-size: 10px 10px, 10px 10px;
    /* Here we specify a color and a stop. The stop is the position along
       the gradient where the color should stop. */
    background-image:
    linear-gradient(rgba(255, 255, 255, 0.2) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255, 255, 255, 0.2) 1px, transparent 1px);
}

.blueprint .class {
    font-family: "Consolas", monospace;
}

div.method {
    background: #C0C;
}

span.method {
    color: #C0C;
}

div.control-flow-structure {
    background: orange;
}

div.object {
    background: #0F0;
}

span.object {
    color: #0F0;
}

div.primitive {
    background: brown;
}

div.boolean {
    background: red;
}

.toolbox {
    background: #777;
    border: 1px solid #333;
}

#map {
    float: left;
    width: 20%;
    height: 100%;
}

#worldMap {
    height: 65%;
}

#gameControls {
    height: 15%;
}